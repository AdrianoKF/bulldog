def javaProjects = [
					project(":bulldog.core"), 
					project(":bulldog.devices"), 
					project(":bulldog.examples"), 
					project(":bulldog.linux"),
					project(":bulldog.beagleboneblack")
					
				   ]

def nativeProjects = [
						project(":bulldog.linux.native")
					 ]



def bulldogVersion = '0.1'

beagleBoneBlackDistro = new File('../dist/beagleboneblack')

configure(nativeProjects) {
	apply from: new File(project.projectDir, 'build.gradle')
	version = bulldogVersion
}
					 
configure(javaProjects) { 
   	   
    apply plugin: 'java'
    apply plugin: 'eclipse'
   	
    version = bulldogVersion
 
    repositories {
       mavenCentral()
    }
 
    dependencies {
    	testCompile 'junit:junit:4.8.2'
    }
 
    jar {
        manifest.attributes 'Implementation-Version': version
        manifest.attributes provider: 'Datenheld'
        from ("${projectDir}/src/main/java/") {
        	include('*/**')
    	}
    }
    
    uploadArchives {
    	repositories {
	    	 flatDir {
	        	dirs 'bulldog.repository'
	    	}
    	}
    }	
}

task beagleboneblackSingleJar(type: Jar, dependsOn: subprojects.assemble) { 
     baseName = 'bulldog-beagleboneblack' 
     manifest { 
     	attributes 'Main-Class': 'org.bulldog.examples.PCF8574Example' 
     }
    
    javaProjects.each { project -> 
    	evaluationDependsOn(project.path) 
    	from project.configurations.default.allArtifacts.files.collect { zipTree(it) } 
	}	
	 
}

task bbbDistro(type: Copy, dependsOn: beagleboneblackSingleJar) {
    beagleBoneBlackDistro.mkdirs()
    FileCollection collection = files('bulldog-beagleboneblack.jar', '../bulldog.linux.native/build/binaries/bulldogSharedLibrary/libbulldog-linux.so')
    from collection
    into beagleBoneBlackDistro
}
